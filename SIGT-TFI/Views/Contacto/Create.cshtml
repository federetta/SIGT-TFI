@model Entities.Contacto

@{
    ViewBag.Title = "Create";
    var id = Url.RequestContext.RouteData.Values["id"];
}
@{ var listadotipocontacto = new List<SelectListItem>();
    foreach (var std in ViewData["TipoContacto"] as IList<Entities.TipoContacto>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.Nombre,
            Value = std.Id.ToString()
        };
        listadotipocontacto.Add(elemento);
    }
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@SIGT_TFI.Resources.HomeTexts.NuevoContacto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.idtipocontacto, @SIGT_TFI.Resources.HomeTexts.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idtipocontacto", listadotipocontacto, new { @class = "form-control dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.idtipocontacto, "", new { @class = "text-danger" })
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.Valor, @SIGT_TFI.Resources.HomeTexts.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>
   


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@SIGT_TFI.Resources.HomeTexts.Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@SIGT_TFI.Resources.HomeTexts.Volver, "Index", new {id})
</div>
