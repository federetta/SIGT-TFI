@model  Entities.Recibo


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>

@{
    ViewBag.Title = "Create";
}
@{ var listadoEntidadBancaria = new List<SelectListItem>();
    foreach (var std in ViewData["EntidadBancaria"] as IList<Entities.EntidadBancaria>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.Nombre,
            Value = std.Id.ToString()
        };
        listadoEntidadBancaria.Add(elemento);
    }
}

@{ var listadoMedioPago = new List<SelectListItem>();
    foreach (var std in ViewData["MedioPago"] as IList<Entities.MedioPago>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.Nombre,
            Value = std.IdMedioPago.ToString()
        };
        listadoMedioPago.Add(elemento);
    }
}

@{ var listadoCliente = new List<SelectListItem>();
    foreach (var std in ViewData["Cliente"] as IList<Entities.Empresa>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.RazonSocial,
            Value = std.id.ToString()
        };
        listadoCliente.Add(elemento);
    } 
 }

    <h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Recibo</h4>
            <hr />
            <div class="col-sm-4">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-2">
                        <label>Numero</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumeroCobranza, new { htmlAttributes = new { @class = "form-control" , id = "numero" } })
                        @Html.ValidationMessageFor(model => model.NumeroCobranza, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>

            <div class="col-sm-4">
                <div class="form-group">
                    <div class="col-md-2">
                        <label>Fecha</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaCobranza, new { htmlAttributes = new { @class = "form-control", @type = "date", id ="fecha" } })
                        @Html.ValidationMessageFor(model => model.FechaCobranza, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IdCliente", listadoCliente , new { htmlAttributes = new { @class = "form-control dropdown-toggle" } })
                        @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    }


    @using (Html.BeginForm("GenerarCobranza", "Cobranza", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">

            @Html.HiddenFor(model => model.IdCliente)
            <div class="col-sm-4">
                <div class="form-group">
                    <div class="col-md-2">
                        <label>Medio</label>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownList("IdMedioPago", listadoMedioPago, new { htmlAttributes = new { @class = "form-control dropdown-toggle", id = "mediopago" } })
                        @Html.ValidationMessageFor(model => model.IdMedioPago, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        <label>Fecha Cheque</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaRecibo, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.FechaRecibo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Directo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Directo)
                            @Html.ValidationMessageFor(model => model.Directo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                
            </div>



            <div class="col-sm-4">
                <div class="form-group">
                    <div class="col-md-2">
                        <label>Banco</label>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownList("IdEntidadBancaria", listadoEntidadBancaria, new { htmlAttributes = new { @class = "form-control dropdown-toggle" } })
                        @Html.ValidationMessageFor(model => model.IdEntidadBancaria, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-2">
                        <label>Plazo</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PlazoRecibo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PlazoRecibo, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-2">
                        <label>Documento</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DocLibrador, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DocLibrador, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>




            <div class="col-sm-4">

                <div class="form-group">
                    <div class="col-md-2">
                        <label>N° Cheque</label>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumeroRecibo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumeroRecibo, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Endosable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Endosable)
                            @Html.ValidationMessageFor(model => model.Endosable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary btn-lg btn-block" />
                    </div>
                </div>

                <table id="tblCustomers" class="table" cellpadding="0" cellspacing="0">
                    <thead>
                        <tr>
                            <th style="width:150px">Numero</th>
                            <th style="width:150px">Fecha</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var std in Model as IList<Entities.Recibo>)
                        {
                            <tr>
                                <td>@std.NumeroCobranza</td>
                                <td>@std.FechaCobranza</td>
                                <td><input type="button" value="Remove" onclick="Remove(this)" /></td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td><input type="button" id="btnAdd" value="Add" /></td>
                        </tr>
                    </tfoot>
                </table>
                <br />
                <input type="button" id="btnSave" value="Save All" />
                }
            </div>
                    
        </div>
    }





            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                <script>
                    $("#IdMedioPago").selectize();
                    $("#IdCliente").selectize();
                    $("#IdEntidadBancaria").selectize();
                    //function myFunction() {
                    //    var table = document.getElementById("myTable");
                    //    var row = table.insertRow(0);
                    //    var cell1 = row.insertCell(0);
                    //    var cell2 = row.insertCell(1);
                    //    cell1.innerHTML = document.getElementById("mediopago").value;
                    //    console.dir(document.getElementById("mediopago"));
                    //    cell2.innerHTML = document.getElementById("numero").value;
                        
                    //}

                    //numero
                    //fecha
                    $("body").on("click", "#btnAdd", function () {
                        //Reference the Name and Country TextBoxes.
                        var txtnumero = $("#numero");
                        var txtfecha = $("#fecha");

                        //Get the reference of the Table's TBODY element.
                        var tBody = $("#tblCustomers > TBODY")[0];

                        //Add Row.
                        var row = tBody.insertRow(-1);

                        //Add Name cell.
                        var cell = $(row.insertCell(-1));
                        cell.html(txtnumero.val());

                        //Add Country cell.
                        cell = $(row.insertCell(-1));
                        cell.html(txtfecha.val());

                        //Add Button cell.
                        cell = $(row.insertCell(-1));
                        var btnRemove = $("<input />");
                        btnRemove.attr("type", "button");
                        btnRemove.attr("onclick", "Remove(this);");
                        btnRemove.val("Remove");
                        cell.append(btnRemove);

                        //Clear the TextBoxes.
                        txtnumero.val("");
                        txtfecha.val("");
                    });

                    function Remove(button) {
                        //Determine the reference of the Row using the Button.
                        var row = $(button).closest("TR");
                        var name = $("TD", row).eq(0).html();
                        if (confirm("Do you want to delete: " + name)) {
                            //Get the reference of the Table.
                            var table = $("#tblCustomers")[0];

                            //Delete the Table row using it's Index.
                            table.deleteRow(row[0].rowIndex);
                        }
                    };

                    $("body").on("click", "#btnSave", function () {
                        //Loop through the Table rows and build a JSON array.
                        var customers = new Array();
                        $("#tblCustomers TBODY TR").each(function () {
                            var row = $(this);
                            var customer = {};
                            customer.Name = row.find("TD").eq(0).html();
                            customer.Country = row.find("TD").eq(1).html();
                            customers.push(customer);
                        });

                        //Send the JSON array to Controller using AJAX.
                        $.ajax({
                            type: "POST",
                            url: "/Home/InsertCustomers",
                            data: JSON.stringify(customers),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (r) {
                                alert(r + " record(s) inserted.");
                            }
                        });
                    });
                </script>
   }