@using SIGT_TFI.Models
@model LoginViewModel
@{
    ViewBag.Title = "Iniciar sesión";
}
@*<h2>@ViewBag.Title.</h2>*@


<link href="~/Content/Login.css" rel="stylesheet" />

<section id="LoginForm">
        <div class="container">
        <div class="login-form">
            <div class="main-div">
                <div class="panel">
                    <h2>Login</h2>
                    <p>Ingrese su Usuario y su Contraseña</p>
                </div>
                <form id="Login" method="post" action="/Account/Login">
                    <div class="form-group">

                        @*<input type="email" class="form-control" id="inputEmail" placeholder="Email Address">*@
                        <input class="form-control" data-val="true" data-val-email="El campo Correo electrónico no es una dirección de correo electrónico válida." data-val-required="El campo Correo electrónico es obligatorio." id="inputEmail" name="Email" type="text" value="" placeholder="Email Address">
                    </div>
                    <div class="form-group">
                        @*<input type="password" class="form-control" id="inputPassword" placeholder="Password">*@
                        <input class="form-control" data-val="true" data-val-required="El campo Contraseña es obligatorio." id="password-input" name="password" type="password" placeholder="Password">
                        <button class="btn btn-default reveal" id="ojito" type="button"><i class="glyphicon glyphicon-eye-open"></i></button>
                    </div>
                    @*<div class="forgot">
                        <a href="reset.html">Forgot password?</a>
                    </div>*@
                    <div class="form-group">
                        <button type="submit" value="Iniciar sesión" class="btn btn-primary" id="btn1">Iniciar</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</section>

    @*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@


@*<div class="row">
    <div class="col-md-12">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
            <div id="login">
                <h4>Ingrese su Usuario y su Contraseña.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })*@
                    @*<div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" , @placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">*@
                    @*@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })*@
                    @*<div class="col-md-10">*@
                        @*@Html.PasswordFor(m => m.Password, new { @class = "form-control" })*@
                        @*<input class="form-control" data-val="true" data-val-required="El campo Contraseña es obligatorio." id="password-input2" name="password" type="password" , placeholder = "Contraseña">*@

                        @*<span class="input-group-btn">*@
                        @*<button class="btn btn-default reveal" id="ojito2" type="button"><i class="glyphicon glyphicon-eye-open"></i></button>*@
                        @*</span>*@

                        @*@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })*@
                    @*</div>
                </div>*@

                @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Iniciar sesión" class="btn btn-default" />
                    </div>
                </div>*@
                @*<p>
                    @Html.ActionLink("Registrar como nuevo usuario", "Register")*@
                @*</p>
                //Habilite esta opción después de habilitar la confirmación de la cuenta para la función de restablecimiento de contraseña
                <p>
                    @Html.ActionLink("¿Ha olvidado su contraseña?", "ForgotPassword")
                </p>
            </div>
            }
    </div>
    </div>*@

@*<form id="myform" action="/Account/Login" method="post">

    User Name <input type="text" id="username" name="UserName" /><br />
    Password  <input type="text" id="password" name="Password" />
    <input type="submit" id="btn1" value="send" />
</form>*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>

            $(".reveal").on('click', function () {
                var $input = $('#password-input');
                var currentInputType = $input.attr('type');
                var inputStatus = {
                    text: 'password',
                    password: 'text'
                };
                $input.attr('type', inputStatus[currentInputType]);

            })

        </script>
        <script>
            $(document).ready(function () {

                //get button by ID
                $('#btn1').submit(function () {

                    //call a function with parameters
                    $.ajax({
                        url: 'Account/Login',  //(rec)= Controller's-name 
                        //(recieveData) = Action's method name
                        type: 'POST',
                        timeout: '12000',
                        datatype: 'text',
                        data: {
                            //Get the input from Document Object Model
                            //by their ID
                            inputEmail: myform.inputEmail.value,
                            password: myform.password-input.value,
                        }

            });
            });
    });
        </script>
    }
