@model Entities.Cliente



@{
    ViewBag.Title = "Buscar";
}

@{ var listadoLetra = new List<SelectListItem>();
    foreach (var std in ViewData["Letra"] as IList<Entities.Letra>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.Nombre,
            Value = std.id.ToString()
        };
        listadoLetra.Add(elemento);
    }
}

@{ var listadoTipoComprobante = new List<SelectListItem>();
    foreach (var std in ViewData["TipoComprobante"] as IList<Entities.TipoComprobante>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.Nombre,
            Value = std.id.ToString()
        };
        listadoTipoComprobante.Add(elemento);
    }
}

@{ var listadoCliente = new List<SelectListItem>();
    foreach (var std in ViewData["Cliente"] as IList<Entities.Empresa>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.RazonSocial,
            Value = std.id.ToString()
        };
        listadoCliente.Add(elemento);
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@SIGT_TFI.Resources.HomeTexts.Buscar @SIGT_TFI.Resources.HomeTexts.Facturas</h4>
        <br />

        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(model => model.IdTipo, @SIGT_TFI.Resources.HomeTexts.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdTipoComprobante", listadoTipoComprobante, new { htmlAttributes = new { @class = "form-control dropdown-toggle" } })
                    @Html.ValidationMessageFor(model => model.IdTipo, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        <div class="col-sm-4">
            <div class="form-group">

                @Html.LabelFor(model => model.IdLetra, @SIGT_TFI.Resources.HomeTexts.Letra, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdLetra", listadoLetra, new { htmlAttributes = new { @class = "form-control dropdown-toggle" } })
                    @Html.ValidationMessageFor(model => model.IdLetra, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <div class="col-md-2">
                    <label>@SIGT_TFI.Resources.HomeTexts.Cliente</label>
                </div>
                @*@Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.DropDownList("IdCliente", listadoCliente, new { htmlAttributes = new { @class = "form-control dropdown-toggle" } })
                    @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@SIGT_TFI.Resources.HomeTexts.Buscar" class="btn btn-primary btn-lg btn-block" />
                </div>
            </div>
            <br />
        </div>
    </div>
}

@using (Html.BeginForm("BuscarComprobante", "Factura", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
       </div>

    if (ViewData["ListaFacturas"] != null)
    {
        <table class="table">
            <tr>
                <th>
                    <label>Id</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Tipo</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Letra</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Fecha</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Numero</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Subtotal</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Iva</label>
                </th>
                <th>
                    <label>@SIGT_TFI.Resources.HomeTexts.Total</label>
                </th>
               
               

                <th></th>
            </tr>
            @foreach (var std in ViewData["ListaFacturas"] as IList<Entities.Cliente>)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(i => std.id)
                    </td>
                    <td>
                        @Html.DisplayFor(i => std.Tipo)
                    </td>
                    <td>
                        @Html.DisplayFor(i => std.Letra)
                    </td>
                    <td>
                        @Html.DisplayFor(i => std.FechaFactura)
                    </td>
                    <td>
                        @std.NumeroFactura.ToString().PadLeft(8, '0')
                    </td>
                    <td>
                     $ @std.Subtotal
                    </td>
                    <td>
                       $ @std.Iva
                    </td>
                    <td>
                       $ @std.Total
                    </td>
                   
                    <td>
                        @Html.ActionLink("PDF", "PDF", new { id = std.id }, new { @class = "btn btn-info" }) 
                    </td>
                    <td>
                        @Html.ActionLink(@SIGT_TFI.Resources.HomeTexts.Imprimir, "PDF", new { id = std.id }, new { @class = "btn btn-info" })
                    </td>
                   

                </tr>
            }


        </table>

    }
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#IdTipoComprobante").selectize();
        $("#IdCliente").selectize();
        $("#IdLetra").selectize();
    </script>


}